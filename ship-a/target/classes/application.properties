server.port=0

##keycloak configuration
#spring.security.oauth2.client.registration.SECOM-Client.client-id=SECOM-Client
##spring.security.oauth2.client.registration.SECOM-Client.client-secret=Xhcm6MtUqzFficJsrfD8Mgk6vxAR60lS
#spring.security.oauth2.client.registration.SECOM-Client.scope=openid, profile, roles
#spring.security.oauth2.client.registration.SECOM-Client.authorization-grant-type=authorization_code
#spring.security.oauth2.client.registration.SECOM-Client.redirect-uri=http://localhost:8087/login/oauth2/code/SECOM-Client
#spring.security.oauth2.client.provider.SECOM-Client.issuer-uri=http://localhost:8181/realms/SECOM

# Kafka Producer Properties
spring.kafka.producer.bootstrap-servers=192.168.146.126:9092
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer

# Kafka Consumer Properties
spring.kafka.consumer.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=my-group
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*

#redis config
spring.redis.host=localhost
spring.redis.port=6379

#
#eureka server config
eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka
spring.application.name=Ship-service


##key-cloak configuration
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=http://localhost:8080/realms/SECOM/protocol/openid-connect/certs

# Zipkin configuration
management.tracing.sampling.probability=1.0
