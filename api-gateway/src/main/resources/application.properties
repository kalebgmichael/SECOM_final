server.port=8989
eureka.client.service-url.defaultZone=http://localhost:8761/eureka
#eureka.client.service-url.defaultZone=http://discovery-server:8761/eureka
spring.application.name=api-gateway

## to add logging INFO
logging.level.root= INFO
logging.level.org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator= INFO
logging.level.org.springframework.cloud.gateway= TRACE
spring.cloud.gateway.default-filters[0]=TokenRelay


spring.cloud.gateway.routes[0].id=KEYEX-SERVICE
spring.cloud.gateway.routes[0].uri=lb://KEYEX-SERVICE/api/key
spring.cloud.gateway.routes[0].predicates[0]=Path=/api/key/**

## rtk Service Route
spring.cloud.gateway.routes[1].id=WEBSOCKET-SERVICE
spring.cloud.gateway.routes[1].uri=lb://WEBSOCKET-SERVICE/
spring.cloud.gateway.routes[1].predicates[0]=Path=/**


## discovery-server Route

spring.cloud.gateway.routes[2].id=discovery-server
spring.cloud.gateway.routes[2].uri=http://discovery-server:8761
#spring.cloud.gateway.routes[2].uri=http://localhost:8761
spring.cloud.gateway.routes[2].predicates[0]=Path=/eureka/web
## to make the request of /eureka/web only to / so without any path defined we do the following with the help of filters
spring.cloud.gateway.routes[2].filters[0]=SetPath=/


## discovery-server static resources  Route, since the above one shows only the page without css

spring.cloud.gateway.routes[3].id=discovery-server-static
spring.cloud.gateway.routes[3].uri=http://discovery-server:8761
# spring.cloud.gateway.routes[3].uri=http://localhost:8761
## every path after eureka/ should be included
spring.cloud.gateway.routes[3].predicates[0]=Path=/eureka/**

## rtk Service Route
spring.cloud.gateway.routes[4].id=DECKEY-SERVICE
spring.cloud.gateway.routes[4].uri=lb://DECKEY-SERVICE/api/deckey
spring.cloud.gateway.routes[4].predicates[0]=Path=/api/deckey/**
#
#### rtk Service Route
spring.cloud.gateway.routes[5].id=ENCKEY-SERVICE
spring.cloud.gateway.routes[5].uri=lb://ENCKEY-SERVICE/api/enckey
spring.cloud.gateway.routes[5].predicates[0]=Path=/api/enckey/**

## gnss Service Route

spring.cloud.gateway.routes[6].id=ENCSYM-SERVICE
spring.cloud.gateway.routes[6].uri=lb://ENCSYM-SERVICE/api/encsym
spring.cloud.gateway.routes[6].predicates[0]=Path=/api/encsym/**
##
##
#### rtk Service Route
##
spring.cloud.gateway.routes[7].id=DECSYM-SERVICE
spring.cloud.gateway.routes[7].uri=lb://DECSYM-SERVICE/api/decsym
spring.cloud.gateway.routes[7].predicates[0]=Path=/api/decsym/**


## Zipkin configuration
#management.tracing.sampling.probability=1.0

#keycloak configuration
spring.security.oauth2.client.registration.SECOM-Client.client-id=SECOM-Client
spring.security.oauth2.client.registration.SECOM-Client.client-secret=rK1tBB7RxdGKjnGnkWVZrB8bLlbbczIe
spring.security.oauth2.client.registration.SECOM-Client.scope=openid, profile, roles, Owner_ID
spring.security.oauth2.client.registration.SECOM-Client.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.SECOM-Client.redirect-uri=http://localhost:8989/login/oauth2/code/gateway
#spring.security.oauth2.client.registration.SECOM-Client.redirect-uri=http://localhost:8080/login/oauth2/code/{registrationId}
spring.security.oauth2.client.provider.SECOM-Client.issuer-uri=http://localhost:8181/realms/SECOM


# Zipkin configuration
management.tracing.sampling.probability=1.0

#spring.security.oauth2.client.registration.gateway.provider=my-provider
#spring.security.oauth2.client.registration.gateway.client-id=SECOM-Client
#spring.security.oauth2.client.registration.gateway.client-secret=Qzofh2oNn80z1X0PjSPFYcEokrvfhXat
#spring.security.oauth2.client.registration.gateway.authorization-grant-type=authorization_code
#spring.security.oauth2.client.registration.gateway.redirect-uri=http://localhost:8080/login/oauth2/code/gateway
#spring.security.oauth2.client.registration.gateway.scope==openid, profile, roles
#spring.security.oauth2.client.provider.my-provider.issuer-uri=http://localhost:8181/realms/SECOM


#spring.security.oauth2.client.provider.my-keycloak-provider.issuer-uri=http://localhost:8181/realms/SECOM
#spring.security.oauth2.client.registration.keycloak-spring-gateway-client.provider=my-keycloak-provider
#spring.security.oauth2.client.registration.keycloak-spring-gateway-client.client-id=spring-gateway-application
#spring.security.oauth2.client.registration.keycloak-spring-gateway-client.client-secret=mks75WsE7ewZkDsN3OPKR3Cuj5nhaUlT
#spring.security.oauth2.client.registration.keycloak-spring-gateway-client.authorization-grant-type=authorization_code
#spring.security.oauth2.client.registration.keycloak-spring-gateway-client.redirect-uri=http://localhost:8080/login/oauth2/code/keycloak


