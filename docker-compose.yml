version: '3'
services:
  zookeeper1:
    image: confluentinc/cp-zookeeper:7.0.1
    container_name: zookeeper1
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
  broker:
    image: confluentinc/cp-kafka:7.0.1
    container_name: broker
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper1
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper1:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
##Zipkin Configuration
  zipkin:
    image: openzipkin/zipkin
    container_name: zipkin
    ports:
      - "9411:9411"
    environment:
      - QUERY_PORT=9411
      - STORAGE_TYPE=mem
      - ZIPKIN_BASE_URL=http://localhost:9411

  ## Keycloak Config with Mysql database
  keycloak-mysql:
    container_name: keycloak-mysql
    image: mysql:5.7
    volumes:
      - ./mysql_keycloak_datay:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: keycloak
      MYSQL_USER: keycloak
      MYSQL_PASSWORD: password

  keycloak:
    container_name: keycloak
    image: quay.io/keycloak/keycloak:18.0.0
    command: [ "start-dev", "--import-realm" ]
    environment:
      DB_VENDOR: MYSQL
      DB_ADDR: mysql
      DB_DATABASE: keycloak
      DB_USER: keycloak
      DB_PASSWORD: password
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    ports:
      - "8080:8080"
    volumes:
      - ./realms/:/opt/keycloak/data/import/
    depends_on:
      - keycloak-mysql
## redis-service configuration
  redis-service:
    container_name: redis-service
    image: redis:6.2-alpine
    restart: always
    ports:
      - '6379:6379'
    command: redis-server --save 20 1 --loglevel warning --requirepass root@123
    volumes:
      - cache:/data

## discovery-server configuration
  discovery-server:
      build: ./discovery-server
      container_name: discovery-server
      ports:
        - "8761:8761"
      environment:
        - SPRING_PROFILES_ACTIVE=docker
      depends_on:
        - zipkin
#$ api-gateway configuration
  api-gateway:
      build: ./api-gateway
      container_name: api-gateway
      ports:
        - "8989:8989"
      expose:
        - "8989"
      environment:
        - SPRING_PROFILES_ACTIVE=docker
        - LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_SECURITY= TRACE
      depends_on:
        - keycloak
        - discovery-server
## websocket-service configuration
  websocket-service:
      build: ./web_sockets
      container_name: websocket-service
      environment:
        - SPRING_PROFILES_ACTIVE=docker
        - REDIS_PASSWORD=root@123
      depends_on:
        - discovery-server
        - api-gateway
        - keygenerator-service
        - zipkin
      ports:
        - "8909:8909"
## keygenerator-service configuration
  keygenerator-service:
      build: ./key_exchange_protocol
      container_name: keygenerator-service
      environment:
        - SPRING_PROFILES_ACTIVE=docker
        - REDIS_PASSWORD=root@123
      depends_on:
        - discovery-server
        - api-gateway
        - zipkin
      ports:
        - "8906:8906"
## Symmetric encrytpion configuration
  enc-sym-service:
      build: ./enc_symmetric
      container_name: EncSym-service
      environment:
        - SPRING_PROFILES_ACTIVE=docker
      depends_on:
        - discovery-server
        - api-gateway
      ports:
        - "8903:8903"
## Symmetric Decrytpion configuration
  dec-sym-service:
      build: ./dec_symmetric
      container_name: DecSym-service
      environment:
        - SPRING_PROFILES_ACTIVE=docker
      depends_on:
        - discovery-server
        - api-gateway
      ports:
        - "8901:8901"
## Asymmetric encrytpion service
  enc-asym-service:
      build: ./encryption_key
      container_name: EncAsym-service
      environment:
        - SPRING_PROFILES_ACTIVE=docker
      depends_on:
        - discovery-server
        - api-gateway
      ports:
        - "8904:8904"
## Asymmetric decryption
  dec-asym-service:
      build: ./decryption_key
      container_name: DecAsym-service
      environment:
        - SPRING_PROFILES_ACTIVE=docker
      depends_on:
        - discovery-server
        - api-gateway
      ports:
        - "8902:8902"
## shore-service configuration
  shore-service:
      build: ./shore-control
      container_name: Shore-service
      environment:
        - SPRING_PROFILES_ACTIVE=docker
      depends_on:
        - discovery-server
        - api-gateway
      ports:
        - "8908:8908"
## ship-service configuration
  ship-service:
      build: ./ship-a
      container_name: Ship-service
      environment:
        - SPRING_PROFILES_ACTIVE=docker
      depends_on:
        - discovery-server
        - api-gateway
      ports:
        - "8907:8907"
volumes:
  cache:
    driver: local

